on:
  push:
    branches:
      - master
  pull_request: {}
name: Continuous Integration
jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt
      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy
      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
  clienttest:
    name: ClientTest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Build all binaries
        uses: actions-rs/cargo@v1
        with:
          command: build
      - name: Run server proxy in background
        run: target/debug/server_proxy conf/server-proxy.toml &
        env:
          RUST_LOG: undermoon=debug,server_proxy=debug
          UNDERMOON_ANNOUNCE_ADDRESS: 127.0.0.1:5299
      - name: Install redis and start redis server
        uses: shogo82148/actions-setup-redis@v1
        with:
          redis-version: '5.x'
      - name: Init server proxy
        run: redis-cli -h localhost -p 5299 UMCTL SETCLUSTER 2 NOFLAGS mydb 127.0.0.1:6379 1 0-16383
      - name: Test server proxy
        run: '[ "$(redis-cli -h localhost -p 5299 EXISTS somekey)" = "0" ]'
      # Run golang tests
      - name: Setup go
        uses: actions/setup-go@v1
        with:
          go-version: '1.15'
      - name: Run Golang client tests
        run: go test -v ./...
        working-directory: ./clienttest/golang
        env:
          CLIENT_TEST_NODE_HOST: 127.0.0.1
          CLIENT_TEST_NODE_PORT: 5299
      # Run java tests
      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Regenerate Gradle Wrapper
        run: gradle wrapper
        working-directory: ./clienttest/java
      - name: Run Java client tests
        run: ./gradlew clean test
        working-directory: ./clienttest/java
        env:
          CLIENT_TEST_NODE_HOST: 127.0.0.1
          CLIENT_TEST_NODE_PORT: 5299
