address = "127.0.0.1:5299"
# announce_address must be the same as the address registered in the broker.
announce_address = "127.0.0.1:5299"

# If this server proxy has one and only one cluster set,
# server proxy will automatically set the cluster to default without
# needing to send AUTH command.
# This is for those clients or proxies like corvus which do not support AUTH.
auto_select_cluster = true

slowlog_len = 1024

# In microseconds like redis.
slowlog_log_slower_than = 20000
# Execute `CONFIG SET slowlog_sample_rate 1` at runtime to record all commands.
slowlog_sample_rate = 1000

thread_number = 2

backend_conn_num = 2
backend_batch_strategy = "fixed"
# In bytes
backend_flush_size = 1024
# In nanoseconds
backend_low_flush_interval = 200000
backend_high_flush_interval = 600000

# Active Redirection Mode
# When active_redirection is enabled,
# all the server proxies will handle the redirection inside.
# Clients don't need to be a Redis Cluster Client.
active_redirection = false
# This is only useful when active_redirection is true.
# Use 0 to disable limitation.
# Or it should be at least 4.
max_redirections = 4

# This should almost only be used in undermoon-operator in Kubernetes.
# When scaling down, the kubernetes service may not be able to remove
# the pods already deleted from the cluster,
# which results in a `CLUSTER_NOT_FOUND` error.
# This default address will redirect the clients to the service
# and try again.
# Leave it empty to disable it.
default_redirection_address = ""

# Cluster Config
# Cluster config can vary between clusters.
# The config below is the default cluster config
# and could be modified dynamically in the memory broker.

# Enable string compression.
# Since commands like INCR won't work when the actual stored string
# is compressed, when string compression is enabled,
# client can only use commands like SET, GET.
#
# Could only be "disabled", "set_get_only"
compression_strategy = "disabled"
# In seconds
migration_max_migration_time = 3600
# In milliseconds
migration_max_blocking_time = 10000
# In microseconds
migration_scan_interval = 500
migration_scan_count = 16
